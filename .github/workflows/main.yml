name: Build Vue App


on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Get version
      id: get_version
      run: | 
        echo "Tag ref: $GITHUB_REF"
      
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.10.0'

    - name: ignore-scripts
      run: |
        if [ "$(npm config get ignore-scripts)" = "true" ]; then
          echo "正在修复: 设置 ignore-scripts=false"
          npm config set ignore-scripts false
        fi
        
        if [[ $(npm --version) == 7.* ]]; then
          echo "检测到 npm v7, 检查 package-lock.json"
          if [ -f package-lock.json ] && \
             ! grep -q '"lockfileVersion": 1' package-lock.json && \
             ! grep -q '"hasInstallScript": true' package-lock.json; then
            echo "修复损坏的 package-lock.json"
            rm -f package-lock.json
            npm install --package-lock-only
          fi
        fi

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install Dependencies
      run: pnpm ci --force

    - name: run build
      run: export NODE_OPTIONS=--max_old_space_size=4096 && pnpm run build

    - name: Print tag
      run: |
        echo "The tag is $GITHUB_REF_NAME"
      
    - name: Write version file
      run: sudo echo "xplayui:$GITHUB_REF_NAME" > ./dist/version.txt

    - name: Create zip file
      run: |
        zip -r ./dist.zip ./dist
      

    - name: Upload Windows Executable
      uses: actions/upload-artifact@v4
      with:
        name: windows-executable
        path: dist.zip

    - name: Generate release notes
      run: |
        python generate_release_notes.py > release_notes.md
        
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        body_path: release_notes.md
        draft: false
        prerelease: false
        files: dist.zip
  
         
